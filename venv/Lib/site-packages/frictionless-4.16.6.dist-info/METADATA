Metadata-Version: 2.1
Name: frictionless
Version: 4.16.6
Summary: Frictionless is a framework to describe, extract, validate, and transform tabular data
Home-page: https://github.com/frictionlessdata/frictionless-py
Author: Open Knowledge Foundation
Author-email: info@okfn.org
License: MIT
Keywords: data validation,frictionless data,open data,json schema,json table schema,data package,tabular data package
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/markdown
Requires-Dist: petl (>=1.6)
Requires-Dist: pyyaml (>=5.3)
Requires-Dist: isodate (>=0.6)
Requires-Dist: rfc3986 (>=1.4)
Requires-Dist: chardet (>=3.0)
Requires-Dist: requests (>=2.10)
Requires-Dist: jsonschema (>=2.5)
Requires-Dist: simpleeval (>=0.9)
Requires-Dist: stringcase (>=1.2)
Requires-Dist: typer[all] (>=0.4)
Requires-Dist: validators (>=0.18)
Requires-Dist: python-slugify (>=1.2)
Requires-Dist: python-dateutil (>=2.8)
Provides-Extra: bigquery
Requires-Dist: google-api-python-client (>=1.12.1) ; extra == 'bigquery'
Provides-Extra: ckan
Requires-Dist: ckanapi (>=4.3) ; extra == 'ckan'
Provides-Extra: dev
Requires-Dist: mypy ; extra == 'dev'
Requires-Dist: moto ; extra == 'dev'
Requires-Dist: black ; extra == 'dev'
Requires-Dist: jinja2 ; extra == 'dev'
Requires-Dist: pylama ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: ipython ; extra == 'dev'
Requires-Dist: pymysql ; extra == 'dev'
Requires-Dist: livemark ; extra == 'dev'
Requires-Dist: psycopg2 ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: pytest-vcr ; extra == 'dev'
Requires-Dist: pytest-only ; extra == 'dev'
Requires-Dist: oauth2client ; extra == 'dev'
Requires-Dist: requests-mock ; extra == 'dev'
Requires-Dist: python-dotenv ; extra == 'dev'
Requires-Dist: pydoc-markdown ; extra == 'dev'
Requires-Dist: docstring-parser ; extra == 'dev'
Provides-Extra: excel
Requires-Dist: openpyxl (>=3.0) ; extra == 'excel'
Requires-Dist: xlrd (>=1.2) ; extra == 'excel'
Requires-Dist: xlwt (>=1.2) ; extra == 'excel'
Provides-Extra: gsheets
Requires-Dist: pygsheets (>=2.0) ; extra == 'gsheets'
Provides-Extra: html
Requires-Dist: pyquery (>=1.4) ; extra == 'html'
Provides-Extra: json
Requires-Dist: ijson (>=3.0) ; extra == 'json'
Requires-Dist: jsonlines (>=1.2) ; extra == 'json'
Provides-Extra: ods
Requires-Dist: ezodf (>=0.3) ; extra == 'ods'
Requires-Dist: lxml (>=4.0) ; extra == 'ods'
Provides-Extra: pandas
Requires-Dist: pandas (>=1.0) ; extra == 'pandas'
Provides-Extra: s3
Requires-Dist: boto3 (>=1.9) ; extra == 's3'
Provides-Extra: server
Requires-Dist: gunicorn (>=20.0) ; extra == 'server'
Requires-Dist: flask (>=1.1) ; extra == 'server'
Provides-Extra: spss
Requires-Dist: savReaderWriter (>=3.0) ; extra == 'spss'
Provides-Extra: sql
Requires-Dist: sqlalchemy (>=1.3) ; extra == 'sql'

# Frictionless Framework

[![Build](https://img.shields.io/github/workflow/status/frictionlessdata/frictionless-py/general/main)](https://github.com/frictionlessdata/frictionless-py/actions)
[![Coverage](https://img.shields.io/codecov/c/github/frictionlessdata/frictionless-py/main)](https://codecov.io/gh/frictionlessdata/frictionless-py)
[![Release](https://img.shields.io/pypi/v/frictionless.svg)](https://pypi.python.org/pypi/frictionless)
[![Citation](https://zenodo.org/badge/28409905.svg)](https://zenodo.org/badge/latestdoi/28409905)
[![Codebase](https://img.shields.io/badge/codebase-github-brightgreen)](https://github.com/frictionlessdata/frictionless-py)
[![Support](https://img.shields.io/badge/support-discord-brightgreen)](https://discordapp.com/invite/Sewv6av)

Frictionless is a framework to describe, extract, validate, and transform tabular data (DEVT Framework). It supports a great deal of data schemes and formats, as well as provides popular platforms integrations. The framework is powered by the lightweight yet comprehensive [Frictionless Data Specifications](https://specs.frictionlessdata.io/).

## Purpose

- **Describe your data**: You can infer, edit and save metadata of your data tables. It's a first step for ensuring data quality and usability. Frictionless metadata includes general information about your data like textual description, as well as, field types and other tabular data details.
- **Extract your data**: You can read your data using a unified tabular interface. Data quality and consistency are guaranteed by a schema. Frictionless supports various file schemes like HTTP, FTP, and S3 and data formats like CSV, XLS, JSON, SQL, and others.
- **Validate your data**: You can validate data tables, resources, and datasets. Frictionless generates a unified validation report, as well as supports a lot of options to customize the validation process.
- **Transform your data**: You can clean, reshape, and transfer your data tables and datasets. Frictionless provides a pipeline capability and a lower-level interface to work with the data.

## Features

- Open Source (MIT)
- Powerful Python framework
- Convenient command-line interface
- Low memory consumption for data of any size
- Reasonable performance on big data
- Support for compressed files
- Custom checks and formats
- Fully pluggable architecture
- The included API server
- More than 1000+ tests

## Example

```bash
$ frictionless validate data/invalid.csv
[invalid] data/invalid.csv

  row    field  code              message
-----  -------  ----------------  --------------------------------------------
             3  blank-header      Header in field at position "3" is blank
             4  duplicate-header  Header "name" in field "4" is duplicated
    2        3  missing-cell      Row "2" has a missing cell in field "field3"
    2        4  missing-cell      Row "2" has a missing cell in field "name2"
    3        3  missing-cell      Row "3" has a missing cell in field "field3"
    3        4  missing-cell      Row "3" has a missing cell in field "name2"
    4           blank-row         Row "4" is completely blank
    5        5  extra-cell        Row "5" has an extra value in field  "5"
```

## Documentation

Please visit our documentation portal:
- https://framework.frictionlessdata.io/docs/guides/quick-start

